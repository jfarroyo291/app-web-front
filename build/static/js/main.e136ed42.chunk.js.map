{"version":3,"sources":["helpers/index.js","api/index.js","components/List/ListItem/index.js","components/List/index.js","components/App/index.js","index.js"],"names":["module","exports","parserForm","aForm","type","value","gender","title","fname","lname","address","email","phone","cell","document_type","document","axios","require","url","config","mode","headers","getTeachers","get","getTutors","getStudents","postTeachers","data","post","postTutors","postStudents","putTeacher","id","put","putTutor","putStudent","delTeacher","delete","delTutor","delStudent","ListItem","props","useState","likes","setLikes","onClick","e","className","alt","src","item","picture","thumbnail","name","first","last","List","list","map","App","message","setMessage","userList","setUserList","showForm","setShowForm","user","setUser","useEffect","handleChange","evt","target","then","resp","filter","onSubmit","aUser","Object","assign","preventDefault","onChange","autoComplete","placeholder","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e136ed42.chunk.js","sourcesContent":["\r\nfunction parserForm(aForm) {\r\n    return {\r\n        \"type\":aForm.type.value,\r\n        \"gender\": aForm.gender.value,\r\n        \"name\": {\r\n            \"title\": aForm.title.value,\r\n            \"first\": aForm.fname.value,\r\n            \"last\": aForm.lname.value\r\n        },\r\n        \"address\": aForm.address.value,\r\n        \"email\": aForm.email.value,\r\n        \"phone\": aForm.phone.value,\r\n        \"cell\": aForm.cell.value,\r\n        \"id\": {\r\n            \"type\": aForm.document_type.value,\r\n            \"value\": aForm.document.value\r\n        },\r\n        \"picture\": {\r\n            \"thumbnail\": `https://via.placeholder.com/500x500?text=${aForm.fname.value}`\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    parserForm\r\n}","const axios = require('axios');\r\n\r\nconst url = \"http://localhost:8000/api\"\r\n\r\nconst config = {\r\n    mode: 'no-cors',\r\n    headers: {\r\n        'Accept': \"*/*\",\r\n        'Access-Control-Allow-Origin': \"*/*\",\r\n        'Content-Type': \"application/json\"\r\n    }\r\n}\r\n\r\nconst getTeachers = () => {\r\n    return axios.get(`${url}/teachers`, config)\r\n}\r\nconst getTutors = () => {\r\n    return axios.get(`${url}/tutors`, config)\r\n}\r\nconst getStudents = () => {\r\n    return axios.get(`${url}/students`, config)\r\n}\r\n\r\nconst postTeachers = (data) => {\r\n    return axios.post(`${url}/teachers`, data, config)\r\n}\r\nconst postTutors = (data) => {\r\n    return axios.post(`${url}/tutors`, data, config)\r\n}\r\nconst postStudents = (data) => {\r\n    return axios.post(`${url}/students`, data, config)\r\n}\r\n\r\nconst putTeacher = (id, data) => {\r\n    return axios.put(`${url}/teachers/${id}`, data, config)\r\n}\r\nconst putTutor = (id, data) => {\r\n    return axios.put(`${url}/tutors/${id}`, data, config)\r\n}\r\nconst putStudent = (id, data) => {\r\n    return axios.put(`${url}/students/${id}`, data, config)\r\n}\r\n\r\nconst delTeacher = (id, data) => {\r\n    return axios.delete(`${url}/teachers/${id}`, data, config)\r\n}\r\nconst delTutor = (id, data) => {\r\n    return axios.delete(`${url}/tutors/${id}`, data, config)\r\n}\r\nconst delStudent = (id, data) => {\r\n    return axios.delete(`${url}/students/${id}`, data, config)\r\n}\r\n\r\nmodule.exports = {\r\n    getTeachers,\r\n    getTutors,\r\n    getStudents,\r\n\r\n    postTeachers,\r\n    postTutors,\r\n    postStudents,\r\n\r\n    putTeacher,\r\n    putTutor,\r\n    putStudent,\r\n\r\n    delTeacher,\r\n    delTutor,\r\n    delStudent,\r\n};","import { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst ListItem = function(props){\r\n    const [likes, setLikes] = useState(0);\r\n        return (\r\n            <li onClick = {(e)=> {\r\n                /* props.handleChild(props.item) */\r\n            }}>\r\n                <div className=\"list-item\">\r\n                    <div className=\"list-item-logo\">\r\n                        <img alt=\"avatar\" src={props.item.picture.thumbnail} />\r\n                    </div>\r\n                    <div className = \"list-item-body\">\r\n                        <p className = \"name\">\r\n                            {`${props.item.name.title} ${props.item.name.first} ${props.item.name.last}`}\r\n                        </p>\r\n                        <p className = \"time\">{props.item.address}</p>\r\n                        <p className = \"prhone\">{props.item.phone}</p>\r\n                        <p className = \"email\">{props.item.email}</p>\r\n                        <p><button className=\"btn\" onClick={() => {setLikes(likes + 1)}}>\r\n                        + {likes}\r\n                        </button></p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            )\r\n};\r\n\r\nexport default ListItem;","import './styles.css';\r\n\r\nimport ListItem from './ListItem';\r\n\r\nconst List = (props) => {\r\n    return(\r\n        <ul  className=\"ul\">\r\n            {props.list.map(item =>(\r\n            <ListItem key={item.id.value} item={item} />\r\n            )\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import { useEffect, useState } from 'react';\r\nimport './styles.css';\r\nimport List from '../List';\r\n\r\nimport { parserForm } from '../../helpers';\r\nimport {\r\n    getTutors, getTeachers, getStudents,\r\n    postTutors, postTeachers, postStudents\r\n  } from '../../api';\r\n\r\n/* import profesores from '../../data/profesores';\r\nimport tutores from '../../data/tutores';\r\nimport estudiantes from '../../data/estudiantes'; */\r\n\r\nconst App = () => {\r\n  //const greet = \"Hola tripulantes, formadores y tutores.\";\r\n  const project = \"MISION TIC 2022!!\";\r\n  const[message, setMessage] = useState(\"Bienvenidos\");\r\n  const[userList, setUserList] = useState([]);\r\n  const[showForm, setShowForm] = useState(true);\r\n  const[user, setUser] = useState({\r\n    document_type: \"\",\r\n    document: \"\",\r\n    title: \"\",\r\n    fname: \"\",\r\n    lname: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    cell: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  //const [loaded, setLoaded] = useState(true);\r\n  /*const [address, setAddress] = useState(\"\");\r\n\r\nvar inputPhone = useRef(\"\"); */\r\n\r\n\r\n    useEffect(()=>{\r\n        //cargue la lista de...\r\n        document.title = `${message}`;\r\n    })\r\n\r\n    /* const handleChild = (item) => {\r\n      inputPhone = item.phone;\r\n      setAddress(item.address)\r\n    }\r\n    const handleform = (event) =>{\r\n      event.preventDefault(); //previene refrescar pagina\r\n\r\n      setLoaded(false);\r\n\r\n      const target = event.target;\r\n      let fullname = `${target.fname.value} ${target.sname.value} ${target.lname.value}`\r\n      data.push({\r\n        \"id\": data.length + 1,\r\n        \"name\": fullname,\r\n        \"address\": target.address.value,\r\n        \"phone\": target.phone.value\r\n      })\r\n      setData(data)\r\n\r\n      event.target.reset()\r\n      setTimeout(() => {\r\n        setLoaded(true);\r\n      },3000)\r\n    }\r\n*/\r\n    const clearForm = evt => {\r\n      setUser ({\r\n        document_type: \"\",\r\n        document: \"\",\r\n        title: \"\",\r\n        fname: \"\",\r\n        lname: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        phone: \"\",\r\n        cell: \"\",\r\n        type: \"\",\r\n      })\r\n      evt.preventDefault();\r\n    }\r\n\r\n    const onSubmit = function (evt) {\r\n      let aForm = evt.target;\r\n      let aUser = Object.assign({}, parserForm(aForm));\r\n      if(aUser.type === \"teachers\"){\r\n        postTeachers(aUser);\r\n      }else if(aUser.type === \"students\"){\r\n        postStudents(aUser);\r\n      }else{\r\n        postTutors(aUser);\r\n      }\r\n      evt.preventDefault();\r\n    }\r\n\r\n    const handleChange = evt => {\r\n      const value = evt.target.value;\r\n      setUser({\r\n        ...user,\r\n        [evt.target.name]:value\r\n      })\r\n    }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\"><br/>\r\n        <h1>{project}</h1>\r\n        <h3>{message}</h3><br/>\r\n        {/* <h5>{greet}</h5> */}\r\n      </header>\r\n        <div className=\"App-buttons\">\r\n          <button onClick = {()=> {\r\n              setMessage(\"Bienvenidos\");\r\n              setShowForm(true);\r\n              setUserList([])\r\n            }}> Formulario </button>\r\n\r\n          <button onClick = {()=> {\r\n            setMessage(\"Lista de Tripulantes\");\r\n            //setData(estudiantes)\r\n\r\n            getStudents().then((resp) => {\r\n              const data = resp.data;\r\n              setUserList(data.filter((user) =>{\r\n                return user.type === \"students\"\r\n              }));\r\n            })\r\n            setShowForm(false);\r\n          }}> Tripulantes </button>\r\n\r\n          <button onClick = {()=>{\r\n            setMessage(\"Lista de Formadores\");\r\n            //setData(profesores)\r\n\r\n            getTeachers().then((resp) => {\r\n              const data = resp.data;\r\n              setUserList(data.filter((user) =>{\r\n                return user.type === \"teachers\"\r\n              }));\r\n            })\r\n            setShowForm(false);\r\n          }}> Formadores </button>\r\n\r\n          <button onClick = {()=>{\r\n            setMessage(\"Lista de Tutores\");\r\n            //setData(tutores)\r\n\r\n            getTutors().then((resp) => {\r\n              const data = resp.data;\r\n              setUserList(data.filter((user) =>{\r\n                return user.type === \"tutors\"\r\n              }));\r\n            })\r\n            setShowForm(false);\r\n          }}> Tutores </button>\r\n            </div>\r\n            {showForm &&\r\n            <form onSubmit  = {onSubmit}>\r\n              <select name=\"document_type\" value = {user.document_type} onChange={handleChange}>\r\n                <option value = \"CC\">CC</option>\r\n                <option value = \"TI\">TI</option>\r\n                <option value = \"OT\">OT</option>\r\n              </select>\r\n              <input name = \"document\" type = \"text\" autoComplete = \"off\" placeholder = \"Identificación\" value = {user.document} onChange={handleChange}/><br/>\r\n              <input name = \"title\" type = \"text\" autoComplete = \"off\" placeholder = \"Título\" value = {user.title} onChange={handleChange}/><br/>\r\n              <input name = \"fname\" type = \"text\" autoComplete = \"off\" placeholder = \"Nombre\" value = {user.fname} onChange={handleChange}/><br/>\r\n              <input name = \"lname\" type = \"text\" autoComplete = \"off\" placeholder = \"Apellidos\" value = {user.lname} onChange={handleChange}/><br/>\r\n              <select name=\"gender\" value = {user.gender} onChange={handleChange}>\r\n                <option value = \"M\">Masculino</option>\r\n                <option value = \"F\">Femenino</option>\r\n              </select>\r\n              <input name = \"email\" type = \"email\" autoComplete = \"off\" placeholder = \"Email\" value = {user.email} onChange={handleChange}/><br/>\r\n              <input name = \"address\" type = \"text\" autoComplete = \"off\" placeholder = \"Dirección\" value = {user.address} onChange={handleChange}/><br/>\r\n              <input name = \"phone\" type = \"text\" autoComplete = \"off\" placeholder = \"Teléfono\" value = {user.phone} onChange={handleChange}/><br/>\r\n              <input name = \"cell\" type = \"text\" autoComplete = \"off\" placeholder = \"Celular\" value = {user.cell} onChange={handleChange}/><br/>\r\n              <select name=\"type\" value = {user.type} onChange={handleChange}>\r\n                <option value = \"teachers\">Formadores</option>\r\n                <option value = \"students\">Tripulantes</option>\r\n                <option value = \"tutors\">Tutores</option>\r\n              </select>\r\n              <div className = \"btn-group\">\r\n                <button onClick={clearForm}>Borrar</button>\r\n                <button type=\"submit\">Enviar</button>\r\n              </div>\r\n            </form>\r\n            }\r\n      <List /*handleChild = {handleChild}*/ list={userList}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './components/App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}